package cz.cvut.fel.restauracefel.pokladna.pokladna_gui;

import java.io.FileNotFoundException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import cz.cvut.fel.restauracefel.library.service.ConfigParser;
import cz.cvut.fel.restauracefel.pokladna_service.ResultTableModel;
import cz.cvut.fel.restauracefel.pokladna_service.ServiceFacade;

/**
 * Trida reprezentujici GUI formular s prehledem vsech uctu.
 *
 * @author Tomas Hnizdil
 */
public class AccountListForm extends AbstractForm {

    private StatusBar statusBar = null;
    private MainFrame parent = null;
    private int filter = 0;
    private JTable table = null;
    private JPanel jPanelTime = null;

    /**
     * Konstruktor tridy AccountListForm.
     *
     * @param parent
     * @param bar
     * @throws java.rmi.RemoteException
     * @throws java.rmi.NotBoundException
     * @throws java.io.FileNotFoundException
     */
    public AccountListForm(MainFrame parent, StatusBar bar) throws FileNotFoundException, NotBoundException, RemoteException {
        this.parent = parent;
        this.statusBar = bar;
        initComponents();
        initTable();
        refresh();
    }

    /**
     * Metoda vyvolava aktualizaci tabulky a prenastavuje statusBar.
     *
     * @throws java.rmi.RemoteException
     * @throws java.rmi.NotBoundException
     * @throws java.io.FileNotFoundException
     */
    @Override
    protected void refresh() throws FileNotFoundException, NotBoundException, RemoteException {
        refreshTable();
        statusBar.setMessage("Tento formulář slouží k přehledu existujících účtů.");
    }

    /**
     * Metoda inicializujici tabulku.
     */
    protected void initTable() {
        table = new JTable();
        table.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        table.setRowSelectionAllowed(true);
        table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jPanelTable.getViewport().add(table);
    }

    /**
     * Metoda aktualizuje tabulku s daty v parametru accounts.
     *
     * @param accounts
     * @throws java.rmi.RemoteException
     * @throws java.rmi.NotBoundException
     * @throws java.io.FileNotFoundException
     */
    protected void refreshTable(Object[][] accounts) throws FileNotFoundException, NotBoundException, RemoteException {
        ResultTableModel rtm = new ResultTableModel();
        rtm.setColumnData(ResultTableModel.namesAccount);
        rtm.setTableData(accounts);
        table.setModel(rtm);
        zmena(null);
    }

    /**
     * Metoda aktualizuje tabulku s daty vsech uctu.
     *
     * @throws java.rmi.RemoteException
     * @throws java.rmi.NotBoundException
     * @throws java.io.FileNotFoundException
     */
    protected void refreshTable() throws FileNotFoundException, NotBoundException, RemoteException {
        Object[][] accounts = ServiceFacade.getInstance().getAccounts();
        ResultTableModel rtm = new ResultTableModel();
        rtm.setColumnData(ResultTableModel.namesAccount);
        rtm.setTableData(accounts);
        table.setModel(rtm);
        zmena(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelTitle = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonChooseTable = new javax.swing.JButton();
        jButtonChoosePerson = new javax.swing.JButton();
        jButtonChooseDiscountType = new javax.swing.JButton();
        jButtonChooseAccountCategory = new javax.swing.JButton();
        jButtonChooseAccountStatusType = new javax.swing.JButton();
        jButtonTime = new javax.swing.JButton();
        jPanelFilter = new BackgroundPanel();
        jLabelFilterName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanelTable = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButtonView = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonUp = new javax.swing.JButton();
        jButtonDown = new javax.swing.JButton();

        setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBox.light"));

        jLabelTitle.setBackground(new java.awt.Color(255, 255, 255));
        jLabelTitle.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("Přehled existujících účtů");
        jLabelTitle.setOpaque(true);

        jPanel2.setOpaque(false);

        jButtonChooseTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/left.png"))); // NOI18N
        jButtonChooseTable.setText("Stůl");
        jButtonChooseTable.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonChooseTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseTableActionPerformed(evt);
            }
        });

        jButtonChoosePerson.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/left.png"))); // NOI18N
        jButtonChoosePerson.setText("Osoba");
        jButtonChoosePerson.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonChoosePerson.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonChoosePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChoosePersonActionPerformed(evt);
            }
        });

        jButtonChooseDiscountType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/left.png"))); // NOI18N
        jButtonChooseDiscountType.setText("Sleva");
        jButtonChooseDiscountType.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonChooseDiscountType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseDiscountTypeActionPerformed(evt);
            }
        });

        jButtonChooseAccountCategory.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/left.png"))); // NOI18N
        jButtonChooseAccountCategory.setText("Kategorie");
        jButtonChooseAccountCategory.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonChooseAccountCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseAccountCategoryActionPerformed(evt);
            }
        });

        jButtonChooseAccountStatusType.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/left.png"))); // NOI18N
        jButtonChooseAccountStatusType.setText("Stav účtu");
        jButtonChooseAccountStatusType.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonChooseAccountStatusType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChooseAccountStatusTypeActionPerformed(evt);
            }
        });

        jButtonTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/left.png"))); // NOI18N
        jButtonTime.setText("Čas");
        jButtonTime.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonChooseTable, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChooseDiscountType, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChooseAccountCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChooseAccountStatusType, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonChoosePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonTime, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jButtonChooseTable, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonChoosePerson, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonChooseDiscountType, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonChooseAccountCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonChooseAccountStatusType, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonTime, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelFilter.setOpaque(false);
        jPanelFilter.setPreferredSize(new java.awt.Dimension(311, 530));

        jLabelFilterName.setFont(new java.awt.Font("Tahoma", 1, 18));
        jLabelFilterName.setText("Žádný filtr");
        jLabelFilterName.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabelFilterName.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jList1.setFont(new java.awt.Font("Tahoma", 1, 18));
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setAlignmentX(2.0F);
        jList1.setFixedCellHeight(50);
        jList1.setFixedCellWidth(200);
        jList1.setFocusCycleRoot(true);
        jList1.setSelectionBackground(javax.swing.UIManager.getDefaults().getColor("InternalFrame.inactiveTitleGradient"));
        jList1.setVisibleRowCount(-1);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1clicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout jPanelFilterLayout = new javax.swing.GroupLayout(jPanelFilter);
        jPanelFilter.setLayout(jPanelFilterLayout);
        jPanelFilterLayout.setHorizontalGroup(
            jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFilterLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabelFilterName, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanelFilterLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addGap(48, 48, 48))
        );
        jPanelFilterLayout.setVerticalGroup(
            jPanelFilterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFilterLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabelFilterName, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanelTable.setBorder(null);
        jPanelTable.setOpaque(false);
        jPanelTable.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                zmena(evt);
            }
        });

        jPanel1.setOpaque(false);

        jButtonView.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/ok.png"))); // NOI18N
        jButtonView.setText(" Zobrazit účet");
        jButtonView.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jButtonView.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jButtonView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonViewActionPerformed(evt);
            }
        });

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/ko.png"))); // NOI18N
        jButtonDelete.setText(" Zrušit filtr");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonView, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonView, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setOpaque(false);

        jButtonUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/up.png"))); // NOI18N
        jButtonUp.setMaximumSize(new java.awt.Dimension(50, 50));
        jButtonUp.setMinimumSize(new java.awt.Dimension(50, 50));
        jButtonUp.setPreferredSize(new java.awt.Dimension(50, 50));
        jButtonUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpActionPerformed(evt);
            }
        });

        jButtonDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cz/cvut/fel/restauracefel/buttons/down.png"))); // NOI18N
        jButtonDown.setMaximumSize(new java.awt.Dimension(50, 50));
        jButtonDown.setMinimumSize(new java.awt.Dimension(50, 50));
        jButtonDown.setPreferredSize(new java.awt.Dimension(50, 50));
        jButtonDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonDown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonUp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonDown, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 1228, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jPanelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jPanelTable, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(414, 414, 414)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanelFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPanelTable, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        if (jPanelTime != null) {
            jPanelTime.setVisible(false);
        }
        jLabelFilterName.setText("Žádný filtr");
        filter = 0;
        Object[] nic = new Object[0];
        jList1.setListData(nic);
        try {
            refreshTable();
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
        zmena(null);
}//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonChooseTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseTableActionPerformed
        if (jPanelTime != null) {
            jPanelTime.setVisible(false);
        }
        jLabelFilterName.setText("Filtrovat podle stolu");
        try {
            String[] tables = ServiceFacade.getInstance().getTableNames();
            if (tables == null) {
                JOptionPane.showMessageDialog(this, "V systému nejsou momentálně evidovány žádné stoly.", "Žádné stoly", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            jList1.setListData(tables);
            filter = 1;
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
        zmena(null);
}//GEN-LAST:event_jButtonChooseTableActionPerformed

    private void jButtonChoosePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChoosePersonActionPerformed
        if (jPanelTime != null) {
            jPanelTime.setVisible(false);
        }
        jLabelFilterName.setText("Filtrovat podle osoby");
        try {
            String[] users = ServiceFacade.getInstance().getUserUsernames();
            if (users == null) {
                JOptionPane.showMessageDialog(this, "V systému nejsou momentálně evidovány žádné osoby.", "Žádné osoby", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            jList1.setListData(users);
            filter = 2;
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
        zmena(null);
}//GEN-LAST:event_jButtonChoosePersonActionPerformed

    private void jButtonChooseDiscountTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseDiscountTypeActionPerformed
        if (jPanelTime != null) {
            jPanelTime.setVisible(false);
        }
        jLabelFilterName.setText("Filtrovat podle typu slevy");
        try {
            String[] discountTypes = ServiceFacade.getInstance().getDiscountTypeNames();
            if (discountTypes == null) {
                JOptionPane.showMessageDialog(this, "V systému nejsou momentálně evidovány žádné typy slev.", "Žádné typy slev", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            jList1.setListData(discountTypes);
            filter = 3;
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
        zmena(null);
}//GEN-LAST:event_jButtonChooseDiscountTypeActionPerformed

    private void jButtonChooseAccountCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseAccountCategoryActionPerformed
        if (jPanelTime != null) {
            jPanelTime.setVisible(false);
        }
        jLabelFilterName.setText("Filtrovat podle kategorie");
        try {
            String[] categories = ServiceFacade.getInstance().getAccountCategoryNames();
            if (categories == null) {
                JOptionPane.showMessageDialog(this, "V systému nejsou momentálně evidovány žádné kategorie účtů.", "Žádné kategorie účtů", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            jList1.setListData(categories);
            filter = 4;
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
        zmena(null);
}//GEN-LAST:event_jButtonChooseAccountCategoryActionPerformed

    private void jButtonChooseAccountStatusTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChooseAccountStatusTypeActionPerformed
        if (jPanelTime != null) {
            jPanelTime.setVisible(false);
        }
        jLabelFilterName.setText("Filtrovat podle stavu účtu");
        filter = 5;
        try {
            jList1.setListData((ServiceFacade.getInstance().getAccountStatusTypeNames()));
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
        zmena(null);
}//GEN-LAST:event_jButtonChooseAccountStatusTypeActionPerformed

    /**
     * Metoda kontroluje spravny format dat v parametrech, prevadi je z formatu String na Date a filtruje ucty podle techto dat
     *
     * @param odkdy
     * @param dokdy
     */
    private void filterByTime(String odkdy, String dokdy) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd 00:00:00");
        SimpleDateFormat sdf3 = new SimpleDateFormat("yyyy-MM-dd 23:59:59");
        String dateFrom, dateTo;
        try {
            Date dFrom = sdf.parse(odkdy);
            dateFrom = sdf2.format(dFrom);
            Date dTo = sdf.parse(dokdy);
            dateTo = sdf3.format(dTo);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Zadejte prosím obě data ve formátu dd.mm.yyyy (např. 23.5.2009).", "Špatný formát dat", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {
            Object[][] accounts = ServiceFacade.getInstance().getAccountsByDate(dateFrom, dateTo);
            refreshTable(accounts);
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Metoda inicializuje panel se vstupnimi polemi pro filtrovani podle casu
     */
    private void initPanel() {
        jPanelTime = new JPanel();
        jPanelTime.setBounds(10, 10, 200, 200);
        jPanelTime.setLayout(new GroupLayout(jPanelTime));

        JLabel label1 = new JLabel("Od:");
        label1.setBounds(0, 10, 50, 30);
        label1.setFont(new java.awt.Font("Tahoma", 1, 18));
        JLabel label2 = new JLabel("Do:");
        label2.setBounds(0, 50, 50, 30);
        label2.setFont(new java.awt.Font("Tahoma", 1, 18));

        final JTextField odkdy = new JTextField();
        odkdy.setBounds(50, 10, 130, 30);
        final JTextField dokdy = new JTextField();
        dokdy.setBounds(50, 50, 130, 30);

        JButton ok = new JButton("Filtrovat");
        ok.setBounds(0, 100, 180, 30);
        ok.setFont(new java.awt.Font("Tahoma", 1, 18));
        ok.setFocusPainted(false);
        ok.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterByTime(odkdy.getText(), dokdy.getText());
            }
        });

        jPanelTime.add(odkdy);
        jPanelTime.add(dokdy);
        jPanelTime.add(label1);
        jPanelTime.add(label2);
        jPanelTime.add(ok);
        jList1.add(jPanelTime);
    }

    private void jButtonTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTimeActionPerformed
        jLabelFilterName.setText("<html>Filtrovat podle objednávky<br>během vybraného období<html>");
        Object[] nic = new Object[0];
        jList1.setListData(nic);
        filter = 0;
        if (jPanelTime == null) {
            initPanel();
        } else {
            jPanelTime.setVisible(true);
        }
        zmena(null);
    }//GEN-LAST:event_jButtonTimeActionPerformed

    private void jButtonViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonViewActionPerformed
        int row = table.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Nebyl vybrán žádný účet.", "Žádný účet", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int accountId = (Integer) table.getModel().getValueAt(row, 0);
        try {
            AccountForm accountForm = new AccountForm(parent, statusBar, accountId);
            parent.panel.getViewport().add(accountForm);
            parent.panel.repaint();
            parent.panel.validate();
            parent.refreshWindowLayout();
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonViewActionPerformed

    private void jButtonUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpActionPerformed
        if (table.getRowCount() == 0) {
            return;
        }
        int radek = table.getSelectedRow() - 1;
        if (radek < 0) {
            radek = table.getRowCount() - 1;
        }
        table.setRowSelectionInterval(radek, radek);
    }//GEN-LAST:event_jButtonUpActionPerformed

    private void jButtonDownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDownActionPerformed
        if (table.getRowCount() == 0) {
            return;
        }
        int radek = table.getSelectedRow() + 1;
        if (radek >= table.getRowCount()) {
            radek = 0;
        }
        table.setRowSelectionInterval(radek, radek);
    }//GEN-LAST:event_jButtonDownActionPerformed

    private void jList1clicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1clicked
        try {
            Object[][] accounts;
            switch (filter) {
                case 1:
                    int tableNumber = Integer.parseInt((String) jList1.getSelectedValue());
                    int tableId = ServiceFacade.getInstance().getTableByTableNumber(tableNumber).getTableId();
                    accounts = ServiceFacade.getInstance().getAccountsByTable(tableId);
                    refreshTable(accounts);
                    break;
                case 2:
                    int userId = ServiceFacade.getInstance().getUserByUsername((String) jList1.getSelectedValue()).getUserId();
                    accounts = ServiceFacade.getInstance().getAccountsByUser(userId);
                    refreshTable(accounts);
                    break;
                case 3:
                    int discountTypeId = ServiceFacade.getInstance().getDiscountTypeByName((String) jList1.getSelectedValue()).getDiscountTypeId();
                    accounts = ServiceFacade.getInstance().getAccountsByDiscountType(discountTypeId);
                    refreshTable(accounts);
                    break;
                case 4:
                    int accountCategoryId = ServiceFacade.getInstance().getAccountCategoryByName((String) jList1.getSelectedValue()).getAccountCategoryId();
                    accounts = ServiceFacade.getInstance().getAccountsByAccountCategory(accountCategoryId);
                    refreshTable(accounts);
                    break;
                case 5:
                    int accountStatusTypeId = ServiceFacade.getInstance().getAccountStatusTypeByName((String) jList1.getSelectedValue()).getAccountStatusTypeId();
                    accounts = ServiceFacade.getInstance().getAccountsByAccountStatusType(accountStatusTypeId);
                    refreshTable(accounts);
                    break;
                default:
                    break;
            }
        } catch (FileNotFoundException fnfe) {
            JOptionPane.showMessageDialog(this, "Konfigurační soubor \"" + ConfigParser.getConfigFile() + "\" nebyl nalezen.", "Chyba", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Nelze navázat spojení se serverem.", "Chyba komunikace", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jList1clicked

    /**
     * Metoda odstranuje ohraniceni tabulky a prekresluje cely formular.
     */
    private void zmena(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_zmena
        jPanelTable.setBorder(null);
        this.validate();
        this.repaint();
    }//GEN-LAST:event_zmena

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonChooseAccountCategory;
    private javax.swing.JButton jButtonChooseAccountStatusType;
    private javax.swing.JButton jButtonChooseDiscountType;
    private javax.swing.JButton jButtonChoosePerson;
    private javax.swing.JButton jButtonChooseTable;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonDown;
    private javax.swing.JButton jButtonTime;
    private javax.swing.JButton jButtonUp;
    private javax.swing.JButton jButtonView;
    private javax.swing.JLabel jLabelFilterName;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelFilter;
    private javax.swing.JScrollPane jPanelTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
